# Generated by Django 3.0.6 on 2021-12-14 14:50

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sign', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('name', models.CharField(max_length=255, verbose_name='F.I.O')),
                ('initsatial', models.CharField(blank=True, max_length=255, verbose_name='F.I.O qisqartirilgani (Masalan S.T.Yoqubov)')),
                ('role', models.CharField(choices=[('1', 'Inspeksiya'), ('2', 'Direktor'), ('3', "O'qituvchi"), ('4', "O'quvchi"), ('5', 'Bugalter'), ('6', 'Instructor')], default='2', max_length=15, verbose_name='Foydalanuvchi roli')),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('avatar', models.ImageField(blank=True, default='', upload_to='user/', verbose_name='Foto')),
                ('birthday', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name="Tug'ilgan vaqti")),
                ('username', models.CharField(blank=True, max_length=30, unique=True)),
                ('phone', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999999999), django.core.validators.MinValueValidator(100000000)])),
                ('pasport', models.CharField(max_length=9, null=True, unique=True, validators=[django.core.validators.MaxLengthValidator(9)])),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(blank=True, default=False)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('last_login', models.DateTimeField(auto_now=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('gender', models.CharField(choices=[('M', 'Erkak'), ('W', 'Ayol')], default='M', max_length=5)),
                ('turbo', models.CharField(blank=True, max_length=200, null=True, validators=[django.core.validators.MinLengthValidator(7)])),
                ('is_offline', models.BooleanField(default=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name="Tug'ilgan joyi")),
                ('residence_address', models.CharField(blank=True, max_length=255, null=True, verbose_name="Yashash joyi (Ko'cha/Qishloq)")),
                ('passport_issued_time', models.DateField(blank=True, default=datetime.date.today, max_length=255, null=True, verbose_name='Pasport berilgan vaqti')),
                ('passport_issued_organization', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pasport bergan tashkilot')),
                ('medical_series', models.CharField(blank=True, max_length=255, null=True, verbose_name="Tibbiy ma'lumotnoma seriyasi")),
                ('medical_issued_organization', models.CharField(blank=True, max_length=255, null=True, verbose_name="Tibbiy ma'lumotnoma bergan poliklinika")),
                ('medical_issued_date', models.DateField(blank=True, default=datetime.date.today, max_length=255, null=True, verbose_name="Tibbiy ma'lumotnoma berilgan sana")),
                ('certificate_series', models.CharField(blank=True, max_length=255, null=True, verbose_name='Guvohnoma seriyasi')),
                ('certificate_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Guvohnoma raqami')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Nomi')),
                ('sort', models.IntegerField(blank=True, default=1)),
            ],
            options={
                'verbose_name': 'Tuman/Shahar',
                'verbose_name_plural': 'Tumanlar/Shaharlar',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='EducationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('sort', models.IntegerField(default=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='excel/')),
            ],
        ),
        migrations.CreateModel(
            name='Pay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.IntegerField(default=0)),
                ('pay_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('comment', models.CharField(blank=True, default=' ', max_length=500, null=True, verbose_name='Izoh')),
                ('removed_date', models.DateTimeField(blank=True, null=True)),
                ('removed_reason', models.CharField(blank=True, default=' ', max_length=500, null=True, verbose_name="O'chirish sababi")),
                ('is_active', models.BooleanField(default=True)),
                ('pupil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pupil_pay', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('waiting', 'Waiting for confirmation'), ('preauth', 'Pre-authorized'), ('confirmed', 'Confirmed'), ('rejected', 'Rejected'), ('refunded', 'Refunded'), ('error', 'Error'), ('input', 'Input')], default='waiting', max_length=10)),
                ('fraud_status', models.CharField(choices=[('unknown', 'Unknown'), ('accept', 'Passed'), ('reject', 'Rejected'), ('review', 'Review')], default='unknown', max_length=10, verbose_name='fraud check')),
                ('fraud_message', models.TextField(blank=True, default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255)),
                ('currency', models.CharField(max_length=10)),
                ('total', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('delivery', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('tax', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
                ('description', models.TextField(blank=True, default='')),
                ('billing_first_name', models.CharField(blank=True, max_length=256)),
                ('billing_last_name', models.CharField(blank=True, max_length=256)),
                ('billing_address_1', models.CharField(blank=True, max_length=256)),
                ('billing_address_2', models.CharField(blank=True, max_length=256)),
                ('billing_city', models.CharField(blank=True, max_length=256)),
                ('billing_postcode', models.CharField(blank=True, max_length=256)),
                ('billing_country_code', models.CharField(blank=True, max_length=2)),
                ('billing_country_area', models.CharField(blank=True, max_length=256)),
                ('billing_email', models.EmailField(blank=True, max_length=254)),
                ('customer_ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('extra_data', models.TextField(blank=True, default='')),
                ('message', models.TextField(blank=True, default='')),
                ('token', models.CharField(blank=True, default='', max_length=36)),
                ('captured_amount', models.DecimalField(decimal_places=2, default='0.0', max_digits=9)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Nomi')),
                ('sort', models.IntegerField(blank=True, default=1)),
                ('state_number_code', models.CharField(blank=True, max_length=2, null=True, verbose_name='Viloyat kodini kiriting')),
            ],
            options={
                'verbose_name': 'Viloyat',
                'verbose_name_plural': 'Viloyatlar',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Nomi')),
                ('phone', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(999999999), django.core.validators.MinValueValidator(100000000)])),
                ('logo', models.ImageField(blank=True, upload_to='school/', verbose_name='Rasm')),
                ('schet', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.MaxValueValidator(99999999999999999999)])),
                ('mfo', models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.MaxValueValidator(99999)])),
                ('bank', models.CharField(blank=True, max_length=50, null=True)),
                ('reg_date', models.DateTimeField(auto_now_add=True)),
                ('is_amet', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_block', models.BooleanField(default=False)),
                ('sms_login', models.CharField(blank=True, max_length=255)),
                ('sms_token', models.CharField(blank=True, max_length=255)),
                ('sms_password', models.CharField(blank=True, max_length=255)),
                ('notification', models.BooleanField(default=False)),
                ('notification_text', models.TextField(blank=True)),
                ('money', models.IntegerField(blank=True, default=0, null=True)),
                ('sms_count', models.IntegerField(blank=True, default=0, null=True)),
                ('add_pupil_sms_count', models.IntegerField(blank=True, default=0, null=True)),
                ('send_sms_add_pupil', models.BooleanField(default=True)),
                ('send_sms_edit_pupil', models.BooleanField(default=False)),
                ('send_sms_add_worker', models.BooleanField(default=False)),
                ('send_sms_edit_worker', models.BooleanField(default=False)),
                ('send_sms_attendance', models.BooleanField(default=False)),
                ('send_sms_rating', models.BooleanField(default=False)),
                ('send_sms_payment', models.BooleanField(default=False)),
                ('is_capital', models.BooleanField(default=False)),
                ('director', models.ForeignKey(blank=True, max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school_director', to=settings.AUTH_USER_MODEL, verbose_name='Rahbar nomi')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school_district', to='user.District', verbose_name='Tuman')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school_region', to='user.Region', verbose_name='Viloyat')),
            ],
        ),
        migrations.CreateModel(
            name='Sms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sms_count', models.IntegerField(blank=True, default=0, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Yaratilgan vaqt')),
                ('text', models.TextField()),
                ('sms_id', models.BigIntegerField(default=0)),
                ('status', models.IntegerField(choices=[(200, 'Muvaffaqiyatli'), (102, 'Kutilmoqda'), (400, 'Yuborilmagan')], default=102)),
                ('phone', models.IntegerField(default=0)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sms_school', to='user.School')),
            ],
            options={
                'verbose_name': 'Sms',
                'verbose_name_plural': 'Smslar',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Bonus summasi')),
                ('comment', models.CharField(max_length=255, verbose_name='Izoh')),
                ('pubdate', models.DateTimeField(auto_now=True)),
                ('pay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_for_pay', to='user.Pay')),
                ('pupil', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referral_for_pupil', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='referral_for_teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Referal bonus',
                'verbose_name_plural': 'Referal bonuslar',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=12, null=True, verbose_name='Olgan bahosi')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Yaratilgan vaqt')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Tahrirlangan vaqt')),
                ('pupil', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pupil_rating', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_rating', to='sign.Subject', verbose_name='Fan')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_rating', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Baho',
                'verbose_name_plural': 'Baholar',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('BC', 'BC'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('Malaka oshirish', 'Malaka oshirish')], default='B', max_length=20, verbose_name='Toifasi')),
                ('number', models.IntegerField()),
                ('year', models.IntegerField(default=2021, null=True, verbose_name="O'quv yili")),
                ('start', models.DateField(verbose_name="O'qish boshlanishi")),
                ('stop', models.DateField(verbose_name="O'qish tugashi")),
                ('is_active', models.BooleanField(default=True)),
                ('price', models.IntegerField(default=0)),
                ('instructors', models.TextField(blank=True, verbose_name='Instruktorlar')),
                ('sort', models.IntegerField(default=1)),
                ('car_structure_teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='car_structure_teacher', to=settings.AUTH_USER_MODEL, verbose_name="Avtomobil tuzilishi o'qituvchisi")),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groups', to='user.School', verbose_name='Avtomaktab')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_teacher', to=settings.AUTH_USER_MODEL, verbose_name="O'qituvchi")),
            ],
            options={
                'verbose_name': 'Guruh',
                'verbose_name_plural': 'Guruhlar',
                'ordering': ['sort'],
            },
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.Region', verbose_name='Tuman/Shahar'),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='contact/')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BuySms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Yaratilgan vaqt')),
                ('sms_count', models.IntegerField(blank=True, default=0, null=True)),
                ('money', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buy_sms_school', to='user.School')),
            ],
            options={
                'verbose_name': 'Sotib olingan sms',
                'verbose_name_plural': 'Sotib olingan smslar',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_visited', models.BooleanField(default=False, verbose_name='Kelgan\\Kelmagan')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Vaqti')),
                ('updated_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Tahrirlangan vaqti')),
                ('pupil', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pupil_attendance', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subject_attendance', to='sign.Subject', verbose_name='Fan')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_attendance', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Davomat',
                'verbose_name_plural': 'Davomatlar',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.District', verbose_name='Yashash joyi (Tuman/Shahar)'),
        ),
        migrations.AddField(
            model_name='user',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_user', to='user.Group'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.Region', verbose_name='Yashash joyi (Viloyat)'),
        ),
        migrations.AddField(
            model_name='user',
            name='school',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school_user', to='user.School', verbose_name='Avtomaktab'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
